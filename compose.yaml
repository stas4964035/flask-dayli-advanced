services:
  server:
    build:
      context: .
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
#    develop:
#      watch:
#        - action: rebuild
#          path: .

  #  Миграция:
  #  set FLASK_APP=run.py
  #  flask db init
  #  flask db migrate
  #  flask db upgrade
  # Если у вас возникают ошибки, то всегда можно пересобрать миграции и выполнить их потворно.
  # Для этого нужно:
  # 1.	Удалить из базы данных таблицу, соответствующую модели, например:
  #  2.	Удалить служебную таблицу alembic_version:
  #  3.	Удалить директорию с миграциями из корневой папки проекта:
  #  4.	Выполнить шаги еще раз:
  #  set FLASK_APP=run.py
  #  flask db init
  #  flask db migrate
  #  flask db upgrade
  #  МИГРАЦИИ ДЛЯ ОТДЕЛЬНОЙ ТАБЛИЦЫ
  #  flask db migrate -m "table_name table"
  #  flask db upgrade

  db:
    container_name: pgbd
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dayli
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
#  pgadmin:
#    image: dpage/pgadmin4
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=noemail@nomail.com
#      - PGADMIN_DEFAULT_PASSWORD=123qwe
#    ports:
#      - "8080:80"
#    volumes:
#      - ./data/pgadmin:/var/lib/pgadmin
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

